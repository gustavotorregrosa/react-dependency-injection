{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gustavo/Documents/react-injection/src/components/login/registerForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ProgressLine from '../progressLine';\nimport UserContext from '../../context/UserContext';\nimport HttpContext from '../../context/HttpContext';\nexport default function RegisterForm() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const http = useContext(HttpContext);\n  const user = useContext(UserContext);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('openRegister', () => handleClickOpen());\n  }, []);\n\n  const doRegister = e => {\n    e.preventDefault();\n    setLoading(true);\n    setTimeout(() => {\n      user.setName('gustavo torregrosa 2');\n      http.setJwt('jwt123456789 2');\n      setLoading(false);\n      handleClose();\n      const event = new CustomEvent('rerender-all');\n      document.dispatchEvent(event);\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField // autoFocus\n        , {\n          margin: \"dense\",\n          id: \"name\",\n          label: \"Name\",\n          type: \"text\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField // autoFocus\n        , {\n          margin: \"dense\",\n          id: \"email\",\n          label: \"Email Address\",\n          type: \"email\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField // autoFocus\n        , {\n          margin: \"dense\",\n          id: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField // autoFocus\n        , {\n          margin: \"dense\",\n          id: \"password-confirmation\",\n          label: \"Password confirmation\",\n          type: \"password\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => doRegister(e),\n          color: \"primary\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(ProgressLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"JATvikf4N2T3RfbFNzM9fzzeBYM=\");\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/home/gustavo/Documents/react-injection/src/components/login/registerForm.js"],"names":["React","useContext","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","ProgressLine","UserContext","HttpContext","RegisterForm","open","setOpen","useState","loading","setLoading","http","user","handleClickOpen","handleClose","document","addEventListener","doRegister","e","preventDefault","setTimeout","setName","setJwt","event","CustomEvent","dispatchEvent"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ProgressLine from '../progressLine'\nimport UserContext from '../../context/UserContext'\nimport HttpContext from '../../context/HttpContext'\n\nexport default function RegisterForm() {\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const http = useContext(HttpContext)\n  const user = useContext(UserContext)\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('openRegister',() => handleClickOpen ())\n  }, [])\n\n  const doRegister = e => {\n    e.preventDefault()\n    setLoading(true)\n    setTimeout(() => {\n      user.setName('gustavo torregrosa 2')\n      http.setJwt('jwt123456789 2')\n      setLoading(false)\n      handleClose()\n      const event = new CustomEvent('rerender-all')\n      document.dispatchEvent(event)\n    }, 3000)\n    \n  }\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n        <DialogContent>\n            <TextField\n            // autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n          />\n\n          <TextField\n            // autoFocus\n            margin=\"dense\"\n            id=\"email\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          />\n          \n        <TextField\n            // autoFocus\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n          />\n\n        <TextField\n            // autoFocus\n            margin=\"dense\"\n            id=\"password-confirmation\"\n            label=\"Password confirmation\"\n            type=\"password\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={ e => doRegister(e)} color=\"primary\">\n              Register\n            </Button>\n        </DialogActions>\n            {loading ? <ProgressLine /> : null }\n      \n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gustavo/Documents/react-injection/src/components/logoutDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ProgressLine from './progressLine';\nimport UserContext from '../context/UserContext';\n\nconst LogoutDialog = props => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const user = useContext(UserContext);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('openLogout', () => handleClickOpen());\n  }, []);\n\n  const doLogout = e => {\n    e.preventDefault();\n    setLoading(true);\n    setTimeout(() => {\n      user.logout();\n      setLoading(false);\n      handleClose();\n      const event = new CustomEvent('rerender-all');\n      document.dispatchEvent(event);\n      props.history.push('/');\n    }, 3000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: user.getName()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => doLogout(e),\n          color: \"primary\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(ProgressLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogoutDialog, \"SGkEpOVjyY5d7kbR+pTmPNE0BhA=\");\n\n_c = LogoutDialog;\nexport default LogoutDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogoutDialog\");","map":{"version":3,"sources":["/home/gustavo/Documents/react-injection/src/components/logoutDialog.js"],"names":["React","useContext","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","ProgressLine","UserContext","LogoutDialog","props","open","setOpen","useState","loading","setLoading","user","handleClickOpen","handleClose","document","addEventListener","doLogout","e","preventDefault","setTimeout","logout","event","CustomEvent","dispatchEvent","history","push","getName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACgB,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,KAAK,CAACgB,QAAN,CAAe,KAAf,CAA9B;AAEA,QAAMG,IAAI,GAAGlB,UAAU,CAACU,WAAD,CAAvB;;AAEA,QAAMS,eAAe,GAAG,MAAM;AAC5BL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMM,WAAW,GAAG,MAAM;AACxBN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAuC,MAAMH,eAAe,EAA5D;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMI,QAAQ,GAAEC,CAAC,IAAI;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAS,IAAAA,UAAU,CAAC,MAAM;AACfR,MAAAA,IAAI,CAACS,MAAL;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,WAAW;AACX,YAAMQ,KAAK,GAAG,IAAIC,WAAJ,CAAgB,cAAhB,CAAd;AACAR,MAAAA,QAAQ,CAACS,aAAT,CAAuBF,KAAvB;AACAhB,MAAAA,KAAK,CAACmB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,KAPS,EAOP,IAPO,CAAV;AASD,GAZD;;AAcA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEnB,IAAd;AAAoB,MAAA,OAAO,EAAEO,WAA7B;AAA0C,yBAAgB,mBAA1D;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAA,kBACGF,IAAI,CAACe,OAAL;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEb,WAAjB;AAA8B,UAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAGI,CAAC,IAAID,QAAQ,CAACC,CAAD,CAA/B;AAAoC,UAAA,KAAK,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAcOR,OAAO,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GAAsB,IAdpC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CArDD;;GAAML,Y;;KAAAA,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ProgressLine from './progressLine'\nimport UserContext from '../context/UserContext'\n\nconst LogoutDialog = props => {\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const user = useContext(UserContext)\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('openLogout',() => handleClickOpen ())\n  }, [])\n\n  const doLogout= e => {\n    e.preventDefault()\n    setLoading(true)\n    setTimeout(() => {\n      user.logout()\n      setLoading(false)\n      handleClose()\n      const event = new CustomEvent('rerender-all')\n      document.dispatchEvent(event)\n      props.history.push('/')\n    }, 3000)\n    \n  }\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Login</DialogTitle>\n        <DialogContent>\n          {user.getName()}\n\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={ e => doLogout(e)} color=\"primary\">\n              Logout\n            </Button>\n        </DialogActions>\n            {loading ? <ProgressLine /> : null }\n      \n      </Dialog>\n    </div>\n  );\n}\n\nexport default LogoutDialog"]},"metadata":{},"sourceType":"module"}
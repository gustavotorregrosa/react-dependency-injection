{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gustavo/Documents/react-injection/src/App.js\";\nimport React, { useContext, createContext } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router';\nimport PageLogin from './pages/login';\nimport UserContext from './context/UserContext';\nimport User from './services/user';\nlet userService = new User();\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      setTimeout(() => {\n        alert(\"foi...3\");\n        this.forceUpdate();\n      }, 6000);\n    };\n\n    this.routes = /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: userService,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: PageLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    return this.routes;\n  }\n\n}\n\nexport default _c = withRouter(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/gustavo/Documents/react-injection/src/App.js"],"names":["React","useContext","createContext","Route","Switch","withRouter","Redirect","PageLogin","UserContext","User","userService","App","Component","componentDidMount","setTimeout","alert","forceUpdate","routes","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,aAA3B,QAA+C,OAA/C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,cAApD;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,IAAIC,WAAW,GAAG,IAAID,IAAJ,EAAlB;;AAEA,MAAME,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAiC;AAAA;AAAA;;AAAA,SAE/BC,iBAF+B,GAEX,MAAM;AACxBC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACA,aAAKC,WAAL;AACD,OAHS,EAGP,IAHO,CAAV;AAID,KAP8B;;AAAA,SAU/BC,MAV+B,gBAW7B,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEP,WAA7B;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAEH;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAX6B;AAAA;;AAkB/BW,EAAAA,MAAM,GAAE;AACN,WAAO,KAAKD,MAAZ;AACD;;AApB8B;;AAyBjC,oBAAeZ,UAAU,CAACM,GAAD,CAAzB","sourcesContent":["import React, {useContext, createContext} from 'react'\nimport { Route, Switch, withRouter, Redirect } from 'react-router'\nimport PageLogin from './pages/login'\nimport UserContext from './context/UserContext'\nimport User from './services/user'\n\nlet userService = new User\n\nclass App extends React.Component{\n\n  componentDidMount = () => {\n    setTimeout(() => {\n      alert(\"foi...3\")\n      this.forceUpdate()\n    }, 6000)\n  }\n\n\n  routes = (\n    <UserContext.Provider value={userService}>\n      <Switch>\n        <Route path=\"/login\" component={PageLogin}/>\n      </Switch>\n    </UserContext.Provider>\n)\n\n  render(){\n    return this.routes\n  }\n\n}\n\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}